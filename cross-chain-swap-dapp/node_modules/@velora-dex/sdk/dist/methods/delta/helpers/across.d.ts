import { BeneficiaryType } from '../../common/orders/types';
import { Bridge } from './types';
export declare const ACROSS_WETH_ADDRESSES_MAP: Record<number, string>;
export declare function isAcrossWETH(tokenAddress: string, chainId: number): boolean;
export declare function isETHaddress(tokenAddress: string): boolean;
export type GetDeltaBridgeAndDestTokenInput = {
    destTokenDestChain: string;
    destChainId: number;
    bridgeFee: string;
    bridgeOutputToken: string;
    beneficiaryType: BeneficiaryType;
    getMulticallHandler: (chainId: number) => Promise<string>;
};
export type GetDeltaBridgeAndDestTokenOutput = {
    /** @description The bridge object to be used for Order.bridge */
    bridge: Bridge;
};
export declare function getDeltaBridge({ destTokenDestChain, destChainId, bridgeFee, bridgeOutputToken, beneficiaryType, getMulticallHandler, }: GetDeltaBridgeAndDestTokenInput): Promise<GetDeltaBridgeAndDestTokenOutput>;
//# sourceMappingURL=across.d.ts.map