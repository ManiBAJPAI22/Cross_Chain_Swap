import type { ConstructProviderFetchInput, RequestParameters } from '../../types';
import { CancelDeltaOrderData } from './helpers/buildCancelDeltaOrderData';
type SuccessResponse = {
    success: true;
};
type CancelDeltaOrderRequestParams = {
    orderIds: string[];
    signature: string;
};
export type SignCancelDeltaOrderRequest = (params: CancelDeltaOrderData, requestParams?: RequestParameters) => Promise<string>;
export type PostCancelDeltaOrderRequest = (params: CancelDeltaOrderRequestParams, requestParams?: RequestParameters) => Promise<SuccessResponse>;
export type CancelDeltaOrder = (params: CancelDeltaOrderData, requestParams?: RequestParameters) => Promise<SuccessResponse>;
export type CancelDeltaOrderFunctions = {
    signCancelLimitDeltaOrderRequest: SignCancelDeltaOrderRequest;
    postCancelLimitDeltaOrderRequest: PostCancelDeltaOrderRequest;
    /** @description Cancel a Limit Delta order */
    cancelLimitDeltaOrders: CancelDeltaOrder;
};
export declare const constructCancelDeltaOrder: (options: Pick<ConstructProviderFetchInput<any, "signTypedDataCall">, "contractCaller" | "fetcher" | "apiURL" | "chainId">) => CancelDeltaOrderFunctions;
export {};
//# sourceMappingURL=cancelDeltaOrder.d.ts.map