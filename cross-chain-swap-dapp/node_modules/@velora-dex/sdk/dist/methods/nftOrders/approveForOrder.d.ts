import type { ApproveToken } from '../../helpers/approve';
import type { Address, ConstructProviderFetchInput, RequestParameters, TxSendOverrides } from '../../types';
type ApproveNFT<T> = (tokenAddress: Address, overrides?: TxSendOverrides, requestParams?: RequestParameters) => Promise<T>;
export type ApproveTokenForNFTOrderFunctions<T> = {
    /** @description approving AugustusSwapper as spender for takerAsset (ERC20) for Limit Orders that will be executed through it */
    approveERC20ForNFTOrder: ApproveToken<T>;
    /** @description approving AugustusRFQ as spender for makerAsset (NFT) */
    approveNFTForNFTOrder: ApproveNFT<T>;
};
export declare const constructApproveTokenForNFTOrder: <T>(options: ConstructProviderFetchInput<T, "transactCall">) => ApproveTokenForNFTOrderFunctions<T>;
export {};
//# sourceMappingURL=approveForOrder.d.ts.map